#!/usr/bin/env bash


function usage() {
    cat << EOF
Usage: dltc-env [argument]

Arguments:
    start                   Start the dltc-env environment
    stop                    Stop the dltc-env environment
    setup, update           Update the dltc-env command and the environment

    -h, --help, help        Show this help message
    -v, --version, version  Show the version of the dltc-env command

EOF

}


############
# MAIN
############


# Bare setup: log file in case the rest fails
_root_dir="${HOME}/.dltc-env"
_logs_dir="${_root_dir}/logs"
mkdir -p "${_logs_dir}"    
log_file="${_logs_dir}/dltc-env.log"
echo "DLTC-ENV LOG" > "${log_file}"

# All sourceable variables and functions are in one place

# Rerun setup if utils are missing
if [ ! -f "${_root_dir}/aux/dltc-env-utils.sh" ]; then
    echo "The dltc-env-utils.sh file is missing. Starting setup..." | tee -a "${log_file}"
    "${_root_dir}/aux/dltc-env-setup.sh"
fi

set -a
. "${HOME}/.dltc-env/aux/dltc-env-utils.sh" "${log_file}"
set +a


case "${1}" in

    "-h" | "--help" | "help")
        usage
        exit 0
        ;;
    
    "-v" | "--version" | "version")
        echo "${version}"
        exit 0
        ;;

    "setup" | "update")
        "${aux_dir}/dltc-env-setup.sh"
        ;;

    "start")

        if [ ! -f "${root_dir}/.dltc_setup_flag" ]; then
            printf "The dltc-env command has not been set up. Please run 'dltc-env setup' first.\n"
            exit 1
        fi

        start_dltc_env_container 

        ;;

    "stop")

        if [ ! -f "${root_dir}/.dltc_setup_flag" ]; then
            printf "The dltc-env command has not been set up. Please run 'dltc-env setup' first.\n"
            exit 1
        fi

        stop_dltc_env_container
        
        ;;

    *)
        printf "Unknown command ${1}"
        usage
        exit 1
        ;;
esac
